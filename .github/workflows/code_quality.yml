name: CODE QUALITY

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  BUILD_TEST:
    name: "BUILD & TEST"
    runs-on: "ubuntu-latest"
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      pull-requests: write
      security-events: write
    steps:
      - name: "> CHECKOUT ⤵️"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "> INITIALIZE CODEQL 🤖"
        uses: github/codeql-action/init@v3
        with:
          languages: "java-kotlin"
          tools: "latest"

      - name: "> SETUP JDK 17 ☕️"
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "> SETUP GRADLE 📦"
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: build --scan -x check

      - name: "> > RUN TESTS 🧪"
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: check

      - name: "> > RUN MUTATION TESTS 🧬"
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: arcmutateLicense pitest
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "> > RUN CODEQL ANALYSIS 🕵🏻"
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java-kotlin"

#      - name: "> QODANA SCAN 🧙🏻"
#        uses: JetBrains/qodana-action@v2023.3
#        with:
#          pr-mode: false
#          cache-default-branch-only: true
#        env:
#          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
#
#      - name: "> > UPLOAD QODANA RESULTS 📤"
#        uses: github/codeql-action/upload-sarif@v2
#        with:
#          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json
#
#      - name: "> > ARCHIVE CODE COVERAGE RESULTS 📦"
#        uses: actions/upload-artifact@v2
#        with:
#          name: code-coverage.zip
#          path: .qodana/code-coverage
