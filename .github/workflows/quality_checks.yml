name: "QUALITY CHECKS üß™"

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  BUILD_TEST:
    name: "BUILD & TEST üèóÔ∏è"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # SETUP
      - name: "CHECKOUT ‚§µÔ∏è"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "INITIALIZE CODEQL ü§ñ"
        uses: github/codeql-action/init@v3
        with:
          languages: java-kotlin
          tools: latest

      - name: "SETUP JDK 17 ‚òïÔ∏è"
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: "SETUP GRADLE üì¶"
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: build --scan -x check

      # TESTS
      #      - name: "SETUP TESTCONTAINERS üê≥"
      #        uses: atomicjar/testcontainers-cloud-setup-action@v1
      #        with:
      #          token: ${{ secrets.TC_CLOUD_TOKEN }}

      - name: "TESTS üß™"
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: check

      # UPLOAD RESULTS
      - name: "‚è© UPLOAD DETEKT RESULTS üì§"
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ github.workspace }}/build/reports/detekt/detekt.sarif

      - name: "‚è© UPLOAD CODECOV RESULTS üì§"
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: ${{ github.workspace }}/.qodana/code-coverage/result.xml

      - name: "‚è© UPLOAD CODECLIMATE RESULTS üì§"
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          JACOCO_SOURCE_PATH: ${{ github.workspace }}/src/main/kotlin
        with:
          coverageLocations: ${{ github.workspace }}/.qodana/code-coverage/result.xml:jacoco

      - name: "‚è© UPLOAD DEPENDENCIES REPORT üì§"
        uses: mshick/add-pr-comment@v2
        with:
          refresh-message-position: true
          message-id: dependencyUpdates/report.txt
          message-path: ${{ github.workspace }}/build/dependencyUpdates/report.txt

      - name: "MUTATION TESTS üß¨"
        uses: gradle/gradle-build-action@v2.4.2
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: pitest

      - name: "‚è© UPLOAD MUTATION TESTS RESULTS üì§"
        uses: gradle/gradle-build-action@v2.4.2
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: pitest-github-upload

      - name: "‚è© UPLOAD MUTATION TESTS ANNOTATION üì§"
        uses: johanholmerin/mutation-report-action@0.2.0
        if: always()
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          report-json: ${{ github.workspace }}/build/reports/pitest/simplified.json

      # SONAR SCAN
      - name: "SONAR SCAN üïµüèª"
        uses: gradle/gradle-build-action@v2.4.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          arguments: sonar

      # ANALYSIS
      - name: "CODEQL ANALYSIS üïµüèª"
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java-kotlin"

      # QODANA
      - name: "QODANA SCAN üßôüèª"
        uses: JetBrains/qodana-action@v2023.3
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          pr-mode: false
          cache-default-branch-only: true

      - name: "‚è© UPLOAD QODANA RESULTS üì§"
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json

      # ARCHIVE REPORTS
      - name: "ARCHIVE REPORTS üì¶"
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: "reports.zip"
          path: |
            ${{ runner.temp }}/qodana/results/qodana.sarif.json
            ${{ github.workspace }}/.qodana/code-coverage
            ${{ github.workspace }}/build/reports/
            ${{ github.workspace }}/build/dependencyUpdates/
